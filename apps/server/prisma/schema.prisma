// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id             String     @id @default(cuid())
  email          String     @unique
  name           String
  username       String     @unique
  location       String?
  avatar         String?
  avatarPublicId String?
  bio            String?
  link           String?
  password       String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt // Updtate automatically when an update is made
  posts          Post[]
  bookmarks      Bookmark[]
  Like           Like[]
  Comment        Comment[]
  following      Follow[]   @relation("Follower")
  followers      Follow[]   @relation("Following")
}

model Follow {
  id          String   @id @default(cuid())
  follower    User     @relation("Follower", fields: [followerId], references: [id])
  followerId  String
  following   User     @relation("Following", fields: [followingId], references: [id])
  followingId String
  createdAt   DateTime @default(now())

  @@unique([followerId, followingId])
  @@index([followerId])
  @@index([followingId])
}

model Post {
  id                 String     @id @default(cuid())
  title              String
  imageUrl           String?
  imagePublicId      String?
  imageCoverUrl      String?
  imageCoverPublicId String?
  videoUrl           String?
  videoPublicId      String?
  description        String?
  author             User       @relation(fields: [authorId], references: [id])
  authorId           String
  views              Int        @default(0)
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt // Updtate automatically when an update is made
  bookmarks          Bookmark[]
  likes              Like[]
  comments           Comment[]

  @@index([authorId])
}

model Like {
  id        String   @id @default(cuid())
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt // Updtate automatically when an update is made

  @@index([postId])
  @@index([userId])
}

model Comment {
  id        String   @id @default(cuid())
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt // Updtate automatically when an update is made

  @@index([postId])
  @@index([userId])
}

model Bookmark {
  id        String   @id @default(cuid())
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt // Updtate automatically when an update is made

  @@index([postId])
  @@index([userId])
}
